# 1 "lexer.mll"
 
let reservedWords = [
  (* Keywords *)
  ("else", Parser.ELSE);
  ("false", Parser.FALSE);
  ("if", Parser.IF);
  ("then", Parser.THEN);
  ("true", Parser.TRUE);
  ("in", Parser.IN);
  ("let", Parser.LET);
  ("and", Parser.AND);
  ("fun", Parser.FUN);
  ("dfun", Parser.DFUN);
  ("rec", Parser.REC);
  ("match", Parser.MATCH);
  ("with", Parser.WITH);
  ("type", Parser.TYPE);
  ("of", Parser.OF);
  ("list", Parser.LIST);
  ("function", Parser.FUNCTION);
]

# 25 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\228\255\001\000\084\000\112\000\232\255\233\255\234\255\
    \235\255\005\000\239\255\240\255\243\255\001\000\001\000\246\255\
    \247\255\248\255\249\255\033\000\251\255\187\000\197\000\004\000\
    \004\000\254\255\241\255\250\255\245\255\244\255\237\255\229\255\
    \086\000\252\255\253\255\006\000\054\000\255\255\254\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\025\000\024\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\019\000\255\255\255\255\
    \255\255\255\255\255\255\017\000\255\255\002\000\013\000\003\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\003\000\003\000\255\255\255\255";
  Lexing.lex_default = 
   "\255\255\000\000\002\000\255\255\255\255\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\000\000\255\255\255\255\000\000\
    \000\000\000\000\000\000\255\255\000\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \033\000\000\000\000\000\255\255\255\255\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\024\000\024\000\000\000\024\000\024\000\024\000\000\000\
    \024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \024\000\000\000\002\000\031\000\024\000\000\000\014\000\028\000\
    \023\000\020\000\017\000\018\000\008\000\022\000\025\000\038\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\009\000\019\000\016\000\012\000\015\000\030\000\
    \005\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\011\000\027\000\010\000\006\000\007\000\
    \037\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\003\000\013\000\029\000\036\000\000\000\
    \035\000\000\000\000\000\000\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\000\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\004\000\
    \000\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\021\000\021\000\000\000\
    \001\000\255\255\000\000\026\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\034\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\000\000\024\000\024\000\255\255\
    \024\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\002\000\024\000\255\255\000\000\014\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\023\000\035\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\009\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\019\000\000\000\000\000\000\000\
    \036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\000\000\013\000\032\000\255\255\
    \032\000\255\255\255\255\255\255\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\004\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\003\000\255\255\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\004\000\
    \255\255\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\021\000\021\000\021\000\021\000\021\000\
    \021\000\021\000\021\000\021\000\021\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\255\255\
    \000\000\002\000\255\255\022\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\032\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec main lexbuf =
    __ocaml_lex_main_rec lexbuf 0
and __ocaml_lex_main_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 26 "lexer.mll"
                                ( main lexbuf )
# 182 "lexer.ml"

  | 1 ->
# 28 "lexer.mll"
       ( comment lexbuf ; main lexbuf )
# 187 "lexer.ml"

  | 2 ->
# 31 "lexer.mll"
    ( Parser.INTV (int_of_string (Lexing.lexeme lexbuf)) )
# 192 "lexer.ml"

  | 3 ->
# 33 "lexer.mll"
      ( Parser.LPAREN )
# 197 "lexer.ml"

  | 4 ->
# 34 "lexer.mll"
      ( Parser.RPAREN )
# 202 "lexer.ml"

  | 5 ->
# 35 "lexer.mll"
       ( Parser.SEMISEMI )
# 207 "lexer.ml"

  | 6 ->
# 36 "lexer.mll"
      ( Parser.PLUS )
# 212 "lexer.ml"

  | 7 ->
# 37 "lexer.mll"
      ( Parser.MULT )
# 217 "lexer.ml"

  | 8 ->
# 38 "lexer.mll"
      ( Parser.LT )
# 222 "lexer.ml"

  | 9 ->
# 39 "lexer.mll"
      ( Parser.GT )
# 227 "lexer.ml"

  | 10 ->
# 40 "lexer.mll"
       ( Parser.AAND )
# 232 "lexer.ml"

  | 11 ->
# 41 "lexer.mll"
       ( Parser.OOR )
# 237 "lexer.ml"

  | 12 ->
# 42 "lexer.mll"
      ( Parser.EQ )
# 242 "lexer.ml"

  | 13 ->
# 43 "lexer.mll"
      ( Parser.MINUS )
# 247 "lexer.ml"

  | 14 ->
# 44 "lexer.mll"
       ( Parser.RARROW )
# 252 "lexer.ml"

  | 15 ->
# 45 "lexer.mll"
      ( Parser.LSQPAREN )
# 257 "lexer.ml"

  | 16 ->
# 46 "lexer.mll"
      ( Parser.RSQPAREN )
# 262 "lexer.ml"

  | 17 ->
# 47 "lexer.mll"
      ( Parser.SEMI )
# 267 "lexer.ml"

  | 18 ->
# 48 "lexer.mll"
       ( Parser.CONS )
# 272 "lexer.ml"

  | 19 ->
# 49 "lexer.mll"
      ( Parser.VERT )
# 277 "lexer.ml"

  | 20 ->
# 50 "lexer.mll"
      ( Parser.COMMA )
# 282 "lexer.ml"

  | 21 ->
# 51 "lexer.mll"
      ( Parser.UNDERBAR )
# 287 "lexer.ml"

  | 22 ->
# 52 "lexer.mll"
      ( Parser.JOIN )
# 292 "lexer.ml"

  | 23 ->
# 53 "lexer.mll"
      ( Parser.APPEND )
# 297 "lexer.ml"

  | 24 ->
# 56 "lexer.mll"
    ( let id = Lexing.lexeme lexbuf in
      try 
        List.assoc id reservedWords
      with
      _ -> Parser.ID id
    )
# 307 "lexer.ml"

  | 25 ->
# 63 "lexer.mll"
    ( let id = Lexing.lexeme lexbuf in
      try 
        List.assoc id reservedWords
      with
      _ -> Parser.CONSTR id
    )
# 317 "lexer.ml"

  | 26 ->
# 70 "lexer.mll"
  (	let s = (Lexing.lexeme lexbuf) in
			let n = String.length s in
				Parser.STRING (String.sub (String.sub s 0 (n - 1)) 1 (n - 2))
		)
# 325 "lexer.ml"

  | 27 ->
# 74 "lexer.mll"
      ( exit 0 )
# 330 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_main_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 32
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 77 "lexer.mll"
      ( comment lexbuf ; comment lexbuf )
# 342 "lexer.ml"

  | 1 ->
# 78 "lexer.mll"
       ( () )
# 347 "lexer.ml"

  | 2 ->
# 79 "lexer.mll"
      ( () )
# 352 "lexer.ml"

  | 3 ->
# 80 "lexer.mll"
    ( comment lexbuf )
# 357 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

